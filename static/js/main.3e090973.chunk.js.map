{"version":3,"sources":["components/CoolText/CoolText.js","components/CoolText/index.js","components/DragFile/DragFile.js","components/DragFile/index.js","utils/ColorGiver.js","components/Chart/Chart.js","components/Chart/index.js","components/ClusterDocument/ClusterDocument.js","components/ClusterDocument/index.js","components/ClusterContent/ClusterContent.js","components/ClusterContent/index.js","components/Results/Results.js","components/Results/index.js","components/Main/Main.js","components/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["CoolText","text","typeTime","delay","useState","shownText","setShownText","useEffect","stepTimeout","timeToTypeLetter","length","textToShow","setTimeout","step","substr","clearTimeout","defaultProps","DragFile","setJson","over","setOver","invalidFile","setInvalidFile","digesting","setDigesting","close","setClose","ref","useRef","current","element","handleDragEnter","handleDragLeave","handleDrop","e","file","dataTransfer","files","_getFileFromEvent","type","indexOf","_fileIsValid","reader","FileReader","onload","target","result","json","JSON","parse","Array","isArray","Error","_validateJson","readAsText","addEventListener","removeEventListener","dragAreaClasses","push","className","join","COLORS","ColorGiver","pub","currentColorIndex","getColor","color","_hexToRgb","hex","exec","r","parseInt","g","b","_calculatePiePieceWidth","circumference","outerRadius","innerRadius","Math","sin","_calculatePiePieceHeight","_getPiePieceLabel","dataset","dataIndex","labels","_getPiePieceModel","_meta","data","_model","_getDatasts","dataJson","datasets","colorGiver","clusters","forEach","cluster","_addClusterToDatasets","layer","backgroundColor","reverse","_getConfig","setSelectedCluster","canvasCtx","options","responsive","maintainAspectRatio","tooltips","callbacks","label","tooltipItem","datasetIndex","index","onClick","event","chartElements","chartElement","_chart","config","_datasetIndex","_index","plugins","datalabels","formatter","value","context","rgb","textStrokeColor","display","clip","clamp","offset","textStrokeWidth","rotation","model","height","width","angle","startAngle","endAngle","font","size","dimensions","max","min","_calculateTextPiePieceDimensions","fontSize","textWidth","measureText","_getOptimalFontSizeForText","Chart","canvasRef","ctx","getContext","pieChart","ChartJs","destroy","RTL_STYLE","dir","textAlign","LTR_STYLE","_getDirectionStyle","s","RegExp","test","ClusterDocument","document","header","link","style","href","ClusterContent","documents","filter","includes","map","key","Results","selectedCluster","Main","_preventDefaults","preventDefault","stopPropagation","App","eventName","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3e090973.chunk.js","sourcesContent":["import{ useState, useEffect } from 'react';\r\n\r\n\r\nexport function CoolText({text, typeTime, delay}) {\r\n    const [shownText, setShownText] = useState('');\r\n\r\n    useEffect(() => {\r\n        setShownText('');\r\n        \r\n        let timeToTypeLetter = typeTime / text.length;\r\n        let stepTimeout;\r\n        let textToShow = '';\r\n\r\n        const step = () => {\r\n            textToShow = text.substr(0, textToShow.length+1);\r\n            setShownText(textToShow);\r\n            if(textToShow !== text){\r\n                stepTimeout = setTimeout(step, timeToTypeLetter);\r\n            }\r\n        };\r\n\r\n        stepTimeout = setTimeout(step, timeToTypeLetter + delay);\r\n\r\n        return () => clearTimeout(stepTimeout);\r\n\r\n\r\n    }, [text, typeTime, setShownText, delay]);\r\n\r\n\r\n    return (\r\n        shownText\r\n    );\r\n}\r\n\r\nCoolText.defaultProps = {\r\n    typeTime: 1000,\r\n    delay: 0\r\n};\r\n\r\nexport default CoolText;\r\n","import {CoolText} from './CoolText.js'\r\n\r\n\r\nexport default CoolText;","import React, { useState, useEffect, useRef } from 'react';\r\nimport './DragFile.css';\r\nimport CoolText from '../CoolText';\r\n\r\nconst DRAG_HERE_TEXT = \"Drop Your Stupid File Here!\";\r\nconst DRAG_OVER_TEXT = \"YES! FEED ME!!! YES!!!\";\r\nconst DIGESTING_TEXT = \"YUM YMU YUM YUM YUM! NOW DIGESTING!!\";\r\nconst INVALID_FILE_TEXT = \"The Last File You Gave Me Was Bad So I Spat It!\";\r\n\r\nconst _getFileFromEvent = (e) => {\r\n    let dt = e.dataTransfer\r\n    let files = dt.files\r\n    let file = files[0];\r\n    return file;\r\n};\r\n\r\nconst _fileIsValid = (file) => (file.type === \"application/json\" || file.type.indexOf(\"text\") === 0);\r\n\r\nconst _validateJson = (json) => {\r\n    if( !Array.isArray(json[\"clusters\"]) || !Array.isArray(json[\"documents\"]) ){\r\n        throw new Error(\"Json Is Invalid\");\r\n    }\r\n};\r\n\r\nexport function DragFile({setJson}) {\r\n    const [over, setOver] = useState(false);\r\n    const [invalidFile, setInvalidFile] = useState(false);\r\n    const [digesting, setDigesting] = useState(false);\r\n    const [close, setClose] = useState(false);\r\n\r\n    const ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(ref && ref.current){\r\n            const element = ref.current;\r\n\r\n            const handleDragEnter = () => {\r\n                setInvalidFile(false);\r\n                setOver(true);\r\n            }\r\n\r\n            const handleDragLeave = () => {\r\n                setOver(false);\r\n            };\r\n\r\n            \r\n            function handleDrop(e) {\r\n                handleDragLeave();\r\n\r\n                const file = _getFileFromEvent(e);\r\n\r\n                if (_fileIsValid(file)) {\r\n                    var reader = new FileReader();\r\n                    reader.onload = function(e) {\r\n                        var text = e.target.result;\r\n                        try{\r\n                            let json = JSON.parse(text);\r\n                            _validateJson(json);\r\n                            setDigesting(true);\r\n                            setTimeout(() => {\r\n                                setClose(true);\r\n                                setTimeout(() => setJson(json), 1000);\r\n                            }, 1500);\r\n                        }\r\n                        catch{\r\n                            setInvalidFile(true);\r\n                        }\r\n                    }\r\n                    reader.readAsText(file);\r\n                }\r\n                else{\r\n                    setInvalidFile(true);\r\n                }\r\n\r\n            }\r\n\r\n\r\n            element.addEventListener('dragenter', handleDragEnter, false);\r\n            element.addEventListener('dragleave', handleDragLeave, false);\r\n            element.addEventListener('drop', handleDrop, false);\r\n\r\n            return () => {\r\n                element.removeEventListener('dragenter', handleDragEnter);\r\n                element.removeEventListener('dragleave', handleDragLeave);\r\n                element.removeEventListener('drop', handleDrop);\r\n            };\r\n        }\r\n    }, [ref, setInvalidFile, setOver, setJson]);\r\n\r\n\r\n    let dragAreaClasses = [\"DragArea\"];\r\n    if(over)    dragAreaClasses.push(\"Over\");\r\n    if(close)   dragAreaClasses.push(\"Close\");\r\n\r\n    return (\r\n        <div className=\"DragFile\">\r\n            <div className={dragAreaClasses.join(' ')} ref={ref}>\r\n                <CoolText text={over ?  DRAG_OVER_TEXT : digesting ? DIGESTING_TEXT : invalidFile ? INVALID_FILE_TEXT : DRAG_HERE_TEXT}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DragFile;\r\n","import {DragFile} from './DragFile.js'\r\n\r\n\r\nexport default DragFile;","/*\r\nconst COLORS = [\r\n    '#2b908f',\r\n    '#90ee7e',\r\n    '#f45b5b',\r\n    '#7798BF',\r\n    '#aaeeee',\r\n    '#ff0066',\r\n    '#eeaaee',\r\n    '#55BF3B',\r\n    '#DF5353',\r\n    '#a6f0ff',\r\n    '#70d49e',\r\n    '#e898a5',\r\n    '#007faa',\r\n    '#f9db72',\r\n    '#1e824c',\r\n    '#e7934c',\r\n    '#dadfe1',\r\n    '#a0618b',\r\n    '#2f7ed8',\r\n    '#0d233a',\r\n    '#8bbc21',\r\n    '#910000',\r\n    '#1aadce',\r\n    '#492970',\r\n    '#f28f43', \r\n    '#77a1e5',\r\n    '#c42525',\r\n    '#a6c96a',\r\n    '#4572A7',\r\n    '#AA4643',\r\n    '#89A54E',\r\n    '#80699B',\r\n    '#3D96AE',\r\n    '#DB843D',\r\n    '#92A8CD',\r\n    '#A47D7C',\r\n    '#B5CA92',\r\n    '#7cb5ec',\r\n    '#434348',\r\n    '#90ed7d',\r\n    '#f7a35c',\r\n    '#8085e9',\r\n    '#f15c80',\r\n    '#e4d354',\r\n    '#91e8e1'\r\n];\r\n*/\r\n\r\nconst COLORS = [\r\n    '#20211d',\r\n    '#50514F',\r\n    '#7f8181',\r\n    '#5D605F',\r\n    '#3b3e3d',\r\n    '#737575',\r\n    '#aaabad',\r\n    '#818587',\r\n    '#585e61',\r\n    '#94999C',\r\n    '#d0d4d7'\r\n];\r\n\r\nexport const ColorGiver = () => {\r\n    const pub = {};\r\n\r\n    let currentColorIndex = 0;\r\n\r\n    pub.getColor = () => {\r\n        let color = COLORS[currentColorIndex];\r\n        currentColorIndex ++;\r\n\r\n        if(currentColorIndex === COLORS.length) currentColorIndex = 0;\r\n\r\n        return color;\r\n    };\r\n\r\n    return pub;\r\n};\r\n\r\nexport default ColorGiver;","import React, { useEffect, useRef } from 'react';\r\nimport './Chart.css';\r\nimport {Chart as ChartJs} from 'chart.js';\r\nimport 'chartjs-plugin-datalabels';\r\n\r\nimport ColorGiver from '../../utils/ColorGiver';\r\n\r\n\r\nconst TEXT_DIMENSION_MULTIPLIER = 0.7;\r\nconst MAX_FONT_SIZE = 40;\r\nconst RAD_TO_DEGREE_MULTIPLIER = 57.296;\r\n\r\nconst _hexToRgb = (hex) => {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n}\r\n\r\nconst _calculatePiePieceWidth = ({circumference, outerRadius, innerRadius}) => {\r\n    return (Math.sin(circumference/2) * (outerRadius + innerRadius ) / 2) * 2;\r\n};\r\n\r\nconst _calculatePiePieceHeight = ({outerRadius, innerRadius}) => {\r\n    return outerRadius - innerRadius;\r\n};\r\n\r\nconst _calculateTextPiePieceDimensions = (model) => {\r\n    let height = _calculatePiePieceHeight(model) * TEXT_DIMENSION_MULTIPLIER;\r\n    let width = _calculatePiePieceWidth(model) * TEXT_DIMENSION_MULTIPLIER;\r\n    return {\r\n        width: Math.max(height, width),\r\n        height: Math.min(height, width)\r\n    };\r\n};\r\n\r\nconst _calculatePiePieceMiddleAngle = ({startAngle, endAngle}) => {\r\n    return RAD_TO_DEGREE_MULTIPLIER * (startAngle + endAngle)/2;\r\n} \r\n\r\nconst _getOptimalFontSizeForText = (canvasCtx, text, {width, height}) => {\r\n    let fontSize = 0;\r\n    let textWidth = 0;\r\n\r\n    while(textWidth < width && fontSize < height && fontSize < MAX_FONT_SIZE){\r\n        fontSize ++;\r\n        canvasCtx.font = `${fontSize}px Arial`;\r\n        textWidth = canvasCtx.measureText(text).width;\r\n    }\r\n\r\n    return fontSize - 1;\r\n};\r\n\r\nconst _getPiePieceLabel = ({dataset, dataIndex}) => {\r\n    return dataset.labels[dataIndex];\r\n};\r\n\r\nconst _getPiePieceModel = ({dataset, dataIndex}) => {\r\n    return dataset._meta[0].data[dataIndex]._model;\r\n};\r\n\r\nconst _createEmptyDataset = () => ({\r\n    data: [],\r\n    clusters: [],\r\n    backgroundColor: [],\r\n    labels: []\r\n});\r\n\r\n\r\nconst _addClusterToDatasets = (datasets, colorGiver, cluster, color, layer = 0) => {\r\n    if(!datasets[layer])    datasets[layer] = _createEmptyDataset();\r\n    const dataset = datasets[layer];\r\n\r\n    if(!color) color = colorGiver.getColor();\r\n\r\n    dataset.data.push(cluster[\"number_of_documents\"]);\r\n    dataset.clusters.push(cluster);\r\n    dataset.labels.push(cluster[\"cluster_name\"]);\r\n    dataset.backgroundColor.push(color);\r\n\r\n    if(cluster[\"sub_clusters\"]){\r\n        cluster[\"sub_clusters\"].forEach((cluster) => {\r\n            _addClusterToDatasets(datasets, colorGiver, cluster, color, layer + 1)\r\n        });\r\n    }\r\n};\r\n\r\nconst _getDatasts = (dataJson => {\r\n    let datasets = [];    \r\n    let colorGiver = ColorGiver();\r\n\r\n    dataJson.clusters.forEach(cluster => _addClusterToDatasets(datasets, colorGiver, cluster));\r\n\r\n    return datasets.reverse();\r\n});\r\n\r\nconst _getConfig = (dataJson, setSelectedCluster, canvasCtx) => {\r\n    return {\r\n        type: 'pie',\r\n        data: {\r\n            datasets: _getDatasts(dataJson)\r\n        },\r\n        options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            tooltips: {\r\n                callbacks: {\r\n                    label: function(tooltipItem, data) {\r\n                        var dataset = data.datasets[tooltipItem.datasetIndex];\r\n                        var index = tooltipItem.index;\r\n                        return dataset.labels[index] + ': ' + dataset.data[index];\r\n                    }\r\n                }\r\n            },\r\n            onClick: (event, chartElements) => {\r\n                const chartElement = chartElements[0];\r\n                if(chartElement){\r\n                    const dataset = chartElement._chart.config.data.datasets[chartElement._datasetIndex];\r\n                    const cluster = dataset.clusters[chartElement._index];\r\n\r\n                    setSelectedCluster(cluster);\r\n                }\r\n            },\r\n            plugins: {\r\n                datalabels: {\r\n                    formatter: (value, context) => {\r\n                        return _getPiePieceLabel(context);\r\n                    },\r\n                    color: ({dataset, dataIndex}) => {\r\n                        let rgb = _hexToRgb(dataset.backgroundColor[dataIndex]);\r\n                        let threshold = 140;\r\n                        let luminance = 0.299 * rgb.r + 0.587 * rgb.g + 0.114 * rgb.b;\r\n                        return luminance > threshold ? 'black' : 'white';\r\n                    },\r\n                    textStrokeColor: ({dataset, dataIndex}) => {\r\n                        let rgb = _hexToRgb(dataset.backgroundColor[dataIndex]);\r\n                        let threshold = 140;\r\n                        let luminance = 0.299 * rgb.r + 0.587 * rgb.g + 0.114 * rgb.b;\r\n                        return luminance > threshold ? 'white' : 'black';\r\n                    },\r\n                    display: true,\r\n                    clip: true,\r\n                    clamp: true,\r\n                    offset: 0,\r\n                    textStrokeWidth: 2,\r\n                    rotation: (context) => {\r\n                        const model = _getPiePieceModel(context);\r\n                        const height = _calculatePiePieceHeight(model);\r\n                        const width = _calculatePiePieceWidth(model);\r\n\r\n                        let angle = _calculatePiePieceMiddleAngle(model)%360;\r\n\r\n                        if(angle > 90 && angle < 270 ){\r\n                            angle -= 180;\r\n                        }\r\n\r\n                        if(width >= height){\r\n                            angle -= 90;\r\n                        }\r\n\r\n\r\n                        return angle;\r\n                    },\r\n                    font: (context) => ({\r\n                        size: ((context) => {\r\n                            const text = _getPiePieceLabel(context);\r\n                            const dimensions = _calculateTextPiePieceDimensions(_getPiePieceModel(context));\r\n                            const fontSize = _getOptimalFontSizeForText(canvasCtx, text, dimensions);\r\n                            return fontSize;\r\n                        })(context)\r\n                    })\r\n                    \r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport function Chart({dataJson, setSelectedCluster}) {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(canvasRef && canvasRef.current){\r\n            const ctx = canvasRef.current.getContext(\"2d\");\r\n            const pieChart = new ChartJs(ctx, _getConfig(dataJson, setSelectedCluster, ctx));\r\n\r\n            return () => pieChart.destroy();\r\n        }\r\n\r\n    }, [canvasRef, dataJson, setSelectedCluster]);\r\n\r\n    return(\r\n        <div className=\"ChartContainer\">\r\n            <canvas className=\"ChartCanvas\" width=\"500\" height=\"500\" ref={canvasRef} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;\r\n","import {Chart} from './Chart.js'\r\n\r\n\r\nexport default Chart;","import React from 'react';\r\nimport './ClusterDocument.css';\r\n\r\n\r\nconst RTL_STYLE = {\r\n    dir: 'rtl',\r\n    textAlign: 'right'\r\n};\r\n\r\nconst LTR_STYLE = {\r\n    dir: 'ltr',\r\n    textAlign: 'left'\r\n};\r\n\r\n\r\nconst _isRTL = (s) => {           \r\n    let ltrChars    = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF',\r\n        rtlChars    = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC',\r\n        rtlDirCheck = new RegExp('^[^'+ltrChars+']*['+rtlChars+']');\r\n\r\n    return rtlDirCheck.test(s);\r\n};\r\n\r\nconst _getDirectionStyle = (text) => {\r\n    return _isRTL(text) ? RTL_STYLE : LTR_STYLE;\r\n};\r\n\r\n\r\nexport function ClusterDocument({document}) {\r\n\r\n    const {header, text, link} = document;\r\n\r\n    return (\r\n        <div className=\"ClusterDocument\">\r\n            <div className=\"ClusterDocumentTitle\" style={_getDirectionStyle(header)}>{header}</div>\r\n            <div className=\"ClusterDocumentText\" style={_getDirectionStyle(text)}>{text}</div>\r\n            <a href={link} className=\"ClusterDocumentLink\" style={LTR_STYLE}>{link}</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClusterDocument;\r\n","import {ClusterDocument} from './ClusterDocument.js'\r\n\r\n\r\nexport default ClusterDocument;","import React from 'react';\r\nimport './ClusterContent.css';\r\nimport ClusterDocument from '../ClusterDocument';\r\n\r\n\r\nexport function ClusterContent({cluster, documents}) {\r\n    return (\r\n        <div className=\"ClusterContent\">\r\n            <div className=\"ClusterTitle\">\r\n                {cluster[\"cluster_name\"]}\r\n            </div>\r\n            <div className=\"ClusterDocuments\">\r\n                {\r\n                    documents\r\n                    .filter((document) => cluster[\"list_of_documents_ids\"].includes(document[\"document_id\"]))\r\n                    .map(document => <ClusterDocument document={document} key={document[\"document_id\"]} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClusterContent;\r\n","import {ClusterContent} from './ClusterContent.js'\r\n\r\n\r\nexport default ClusterContent;","import React, { useState } from 'react';\r\nimport './Results.css';\r\nimport CoolText from '../CoolText';\r\nimport Chart from '../Chart';\r\nimport ClusterContent from '../ClusterContent'\r\n\r\nconst PIE_TITLE_TEXT = 'I Barfed This Pie For You';\r\nconst CONTENT_TITLE_TEXT = 'Here Is The Pie Contents';\r\nconst CONTENT_SUB_TITLE_TEXT = 'You Know, For Allergies & Such';\r\n\r\nexport function Results({dataJson}) {\r\n    const [selectedCluster, setSelectedCluster] = useState(dataJson.clusters[0]);\r\n\r\n    return (\r\n        <div className=\"Results\">\r\n\r\n            <div className=\"PieSection\">\r\n                <div className=\"PieTitle\">\r\n                    <CoolText text={PIE_TITLE_TEXT} />\r\n                </div>\r\n                <div className=\"PieContainer\">\r\n                    <Chart dataJson={dataJson} setSelectedCluster={setSelectedCluster} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Divider\"></div>\r\n\r\n            <div className=\"ContentSection\">\r\n                <div className=\"ContentTitle\">\r\n                    <CoolText text={CONTENT_TITLE_TEXT} delay={2100} />\r\n                    <div className=\"ContentSubTitle\">\r\n                        <CoolText text={CONTENT_SUB_TITLE_TEXT} delay={3200} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"ContentContainer\">\r\n                    <ClusterContent cluster={selectedCluster}  documents={dataJson[\"documents\"]} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Results;\r\n","import {Results} from './Results.js'\r\n\r\n\r\nexport default Results;","import React, { useState } from 'react';\r\nimport './Main.css';\r\nimport DragFile from '../DragFile';\r\nimport Results from '../Results';\r\n\r\nexport function Main() {\r\n    const [json, setJson] = useState();\r\n\r\n    return (\r\n        <div className=\"Main\">\r\n            {\r\n                json ? <Results dataJson={json} /> : <DragFile setJson={setJson}/>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import {Main} from './Main.js'\r\n\r\n\r\nexport default Main;","import React, { useRef, useEffect } from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport CoolText from './components/CoolText';\n\n\nconst TITLE_TEXT = 'Topix';\nconst COPY_RIGHT_TEXT = \"This Site Is Brought To You By The Brain Of Dor Gross, All Rights Reserved To Dor Gross.\"\n\n\nfunction _preventDefaults (e) {\n  e.preventDefault()\n  e.stopPropagation()\n}\n\nfunction App() {\n\n  const ref = useRef(null);\n\n  // Because we have drag and drop in the appplicaton\n  // We want to cancel any weird default action the browser might come up with\n  useEffect(() => {\n    if(ref && ref.current){\n      let element = ref.current;\n      \n      ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n          element.addEventListener(eventName, _preventDefaults, false);\n      });\n\n      return () => {\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n          element.removeEventListener(eventName, _preventDefaults, false);\n        });\n      };\n    }\n  },[ref]);\n\n\n\n  return (\n    <div className=\"App\" ref={ref}>\n      \n      <div className=\"Header\">\n        <span className=\"Title\">\n          <CoolText text={TITLE_TEXT} />\n        </span>\n      </div>\n      \n      <div className=\"Body\">\n        <Main/>\n      </div>\n\n      <div className=\"Footer\">\n        <CoolText text={COPY_RIGHT_TEXT} delay={20000} typeTime={3000} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}